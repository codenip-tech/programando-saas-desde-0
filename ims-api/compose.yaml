services:
###> doctrine/doctrine-bundle ###
  symfony-app-postgres:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-postgres}", "-U", "${POSTGRES_USER:-postgres}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - symfony-app-network
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
  symfony-app:
    container_name: symfony-app
    build:
      context: ./docker
      args:
        UID: $U_ID
    volumes:
      - ./:/var/www/html
    ###> XDEBUG 3 ###
    # Use your client IP here
    # Linux: run "ip a | grep docker0"
    # Windows (with WSL2) and Mac: host.docker.internal
    environment:
      XDEBUG_CLIENT_HOST: 172.17.0.1
      XDEBUG_CLIENT_PORT: 9003
      PHP_IDE_CONFIG: serverName=symfony-server
    ports:
      - '1000:80'
    networks:
      - symfony-app-network
    depends_on:
      - symfony-app-postgres

networks:
  symfony-app-network:
    name: symfony-app-network

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
